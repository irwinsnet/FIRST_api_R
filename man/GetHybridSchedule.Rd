% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/firstapiR_main.R
\name{GetHybridSchedule}
\alias{GetHybridSchedule}
\title{Get the match schedule and results}
\usage{
GetHybridSchedule(session, event, level = "qual", start = NULL,
  end = NULL, mod_since = NULL, only_mod_since = NULL)
}
\arguments{
\item{session}{A Session object created with \code{GetSession()}.}

\item{event}{A character vector containing a FIRST API event code
(see \code{GetEvents}).}

\item{level}{A character vector containing either \emph{"qual"} or
\emph{"playoff"}. Optional: defaults to \emph{"qual"}.}

\item{start}{An integer vector containing the earliest match to return.
Optional.}

\item{end}{An integer vector containing the latest match to return. Optional.}

\item{mod_since}{A character vector containing an HTTP formatted date and
time. Returns \code{NA} if no changes have been made to the requested data
since the date and time provided. Optional.}

\item{only_mod_since}{A character vector containing an HTTP formatted date
and time. This function only returns data that has changed since the date
and time provided. Optional.}
}
\value{
Depending on the \code{session$format} value, returns JSON text, an
  XML::XMLDocument object, or a data.frame with class set to c("data.frame,
  "HybridSchedule"). Returns a logical vector of length one with value
  \code{NA} if data is unchanged since date and time passed in arguments
  \code{mod_since} or \code{only_mod_since}.
}
\description{
For matches that have been played, \code{GetHybridSchedule} returns the teams
assigned to the match and the match results. If the mtach has not yet been
played, the assigned teams and schedule data are returned, but the result
fields are blank.
}
\details{
The data frame returned by \code{GetHybridSchedule()} is in team shape,
i.e., each ' row contains data for a single team and there are six rows per
match. Use ' \code{ToAllianceShape()} or \code{ToMatchShape} to convert the
data frame to ' a three-teams-per-row shape or a six-teams-per-row shape.

See the \emph{Hybrid Schedule} section of the FIRST API documentation for
more details.

The FIRST API URL format is:

\code{https://frc-api.firstinspires.org/v2.0/season/schedule/event/level/
hybrid?start=start&end=end}
}
\section{Columns}{

  \enumerate{
     \item \emph{match}: integer
     \item \emph{description}: character
     \item \emph{level}: factor
     \item \emph{start}: character
     \item \emph{actualStart}: character
     \item \emph{team}: factor
     \item \emph{alliance}: factor (Blue, Red)
     \item \emph{station}: factor (Red1, Red2, Red3, Blue1, Blue2, Blue3)
     \item \emph{surrogate}: logical
     \item \emph{disqualified}: logical
     \item \emph{scoreFinal, scoreAuto, scoreFoul}: integer}
}
\examples{
sn <- GetSession("username", "key")
GetHybridSchedule(sn, event = "ORPHI")
GetHybridSchedule(sn, event = "WAELL", level = "playoff", start = 3, end = 6)
}
\seealso{
Refer to \code{\link{Standard firstapiR Attributes}} for data
attributes returned by this function.
}

