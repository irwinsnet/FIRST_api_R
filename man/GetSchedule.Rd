% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/firstapiR_main.R
\name{GetSchedule}
\alias{GetSchedule}
\title{Get the match schedule for a specific event}
\usage{
GetSchedule(
  session,
  event,
  level = "qual",
  team = NULL,
  start = NULL,
  end = NULL,
  mod_since = NULL,
  only_mod_since = NULL
)
}
\arguments{
\item{session}{A Session object created with \code{GetSession()}.}

\item{event}{A character vector containing a FIRST API event code
(see \code{GetEvents}).}

\item{level}{A character vector containing either \emph{"qual"} or
\emph{"playoff"}. Defaults to \emph{"qual"}. Optional.}

\item{team}{An integer vector containing a team number. Optional.}

\item{start}{An integer vector containing the earliest match to return.
Optional.}

\item{end}{An integer vector containing the latest match to return. Optional.}

\item{mod_since}{A character vector containing an HTTP formatted date and
time. Returns \code{NA} if no changes have been made to the requested data
since the date and time provided. Optional.}

\item{only_mod_since}{A character vector containing an HTTP formatted date
and time. This function only returns data that has changed since the date
and time provided. Optional.}
}
\value{
Depending on the \code{session$format} value, returns JSON text, an
  XML::XMLDocument object, or a data.frame with class set to c("data.frame,
  "Schedule"). Returns a logical vector of length one with value \code{NA} if
  data is unchanged since date and time passed in arguments \code{mod_since}
  or \code{only_mod_since}.
}
\description{
Returns either the qualification schedule or the playoff schedule, based on
the value of the \code{level} argument. The \code{start} and \code{end}
arguments allow filtering of results to specific matches.
}
\details{
The data frame returned by \code{GetSchedule()} is in team shape, i.e., each
row contains data for a single team and there are six rows per match. Use
\code{ToAllianceShape()} or \code{ToMatchShape} to convert the data frame to
a three-teams-per-row shape or a six-teams-per-row shape.

See the \emph{Event Schedule} section of the FIRST API documentation at
\url{http://docs.frcevents2.apiary.io/#} for more details.

The FIRST API URL format is:

\code{https://frc-api.firstinspires.org/v2.0/season/schedule/event?
tournamentLevel=level&teamNumber=team&start=start&end=end}
}
\section{Columns}{

  \enumerate{
    \item \emph{match}: integer
    \item \emph{description}: character
    \item \emph{level}: factor
    \item \emph{field}: character
    \item \emph{start}: character
    \item \emph{team}: factor
    \item \emph{alliance}: factor (Blue, Red)
    \item \emph{station}: factor (Red1, Red2, Red3, Blue1, Blue2, Blue3)
    \item \emph{surrogate}: logical}
}

\examples{
sn <- GetSession("username", "key", season = 2016)
PNW_champs_qual_sched <- GetSchedule(sn, "PNCMP")
qual_matches_5_to_10 <- GetSchedule(sn, "PNCMP", start=5, end=10)
CWU_playoff_sched <- GetSchedule(sn, "WAAMV", level='playoff')
frc4911_matches_thru_25 <- GetSchedule(sn, "PNCMP", team=4911, end=25)
}
\seealso{
Refer to \code{\link{Standard_attributes}} for data
attributes returned by this function.
}
